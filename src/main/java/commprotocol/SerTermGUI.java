/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package commprotocol;

//import java.io.FileDescriptor;
import java.awt.TextField;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.util.Enumeration;
import java.util.TooManyListenersException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JRadioButton;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.JToggleButton;
import javax.swing.text.DefaultCaret;
import jssc.SerialPort;
import jssc.SerialPortEvent;
import jssc.SerialPortEventListener;
import jssc.SerialPortException;
import jssc.SerialPortList;
import jssc.SerialPortTimeoutException;
//import javax.swing.JOptionPane;

/**
 *
 * @author pperez
 */
public class SerTermGUI extends javax.swing.JFrame {
   // solo para inicializar
    private String[] portList={""}; //list of ports for combobox dropdown
 
    Serie Comm;
    Motor motor;
    ServidorCAN sCAN;
        //constants
    static final int MAX_PORTS = 20;    //maximum number of ports to look for
    static final int MAX_DATA = 64;//maximum length of serial data received
    
    File HexFile;
    
    private String[] tempPortList; //list of ports for combobox dropdown
    private String portName;
    /*private CommPort commPort;*/

 
    
    private OutputStream outputStream;
    private int baudRate=115200;
    private boolean open=false;


     
    /**
     * Creates new form SerTermGUI_v1
     */
    public SerTermGUI() {
        initComponents();
                baudField.setText(""+baudRate);
      
        //Display some instructions upon opening
         Comm=new Serie(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPane = new javax.swing.JScrollPane();
        textWin = new javax.swing.JTextArea();
        clearButton = new javax.swing.JButton();
        textbar = new javax.swing.JTextField();
        fileChooser = new javax.swing.JFileChooser();
        SendButton = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        portBox = new javax.swing.JComboBox();
        jTextField2 = new javax.swing.JTextField();
        baudField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        portToggle = new javax.swing.JToggleButton();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jToggleButton2 = new javax.swing.JToggleButton();
        jToggleButton3 = new javax.swing.JToggleButton();
        jTextField_target_msg_s = new javax.swing.JTextField();
        jTextField_nmsg = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jToggleButton4 = new javax.swing.JToggleButton();
        jTextField_speedCAN = new javax.swing.JTextField();
        jTextField_nmsg1_rec = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jToggleButton5 = new javax.swing.JToggleButton();
        jTextField_target_PIDS = new javax.swing.JTextField();
        jToggleButton6 = new javax.swing.JToggleButton();
        jTextField_target_PIDE = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        textWin.setEditable(false);
        textWin.setColumns(20);
        textWin.setLineWrap(true);
        textWin.setRows(5);
        textWin.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        textWin.setDoubleBuffered(true);
        textWin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textWinteclapulsada(evt);
            }
        });
        scrollPane.setViewportView(textWin);

        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        textbar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textbarActionPerformed(evt);
            }
        });

        fileChooser.setDialogType(javax.swing.JFileChooser.CUSTOM_DIALOG);
        fileChooser.setApproveButtonText("Enviar Fichero");
        fileChooser.setApproveButtonToolTipText("");
        fileChooser.setDialogTitle("Hex File");
        fileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileChooserActionPerformed(evt);
            }
        });

        SendButton.setText("Send");
        SendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendButtonActionPerformed(evt);
            }
        });

        jButton3.setText("Erase");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Reset");
        jButton4.setActionCommand("reset");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton2.setText("Boot");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        portBox.setModel(new javax.swing.DefaultComboBoxModel(portList));
        portBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                portBoxActionPerformed(evt);
            }
        });

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        baudField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                baudFieldActionPerformed(evt);
            }
        });

        jLabel3.setText("Baud");

        portToggle.setText("Open Port");
        portToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                portToggleActionPerformed(evt);
            }
        });

        jButton1.setText("Exit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Conexiones/Mensajes");

        jTextField4.setText("0");
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jTextField3.setText("0");
        jTextField3.setToolTipText("");
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jTextField5.setText("255.255.255.255");
        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        jTextField1.setText("50000");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Puerto:");

        jToggleButton1.setText("Start Server");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Ports detected");

        jLabel5.setText("Selected port");

        jLabel6.setText("Bytes");

        jTextField6.setText("50000");
        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });

        jTextField7.setText("50000");
        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });

        jLabel7.setText("IP:");

        jToggleButton2.setText("Start");
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });

        jToggleButton3.setText("Stop");
        jToggleButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton3ActionPerformed(evt);
            }
        });

        jTextField_target_msg_s.setText("1");
        jTextField_target_msg_s.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_target_msg_sActionPerformed(evt);
            }
        });

        jTextField_nmsg.setText("0");
        jTextField_nmsg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_nmsgActionPerformed(evt);
            }
        });

        jLabel8.setText("Target msg/s");

        jLabel9.setText("send");

        jToggleButton4.setText("Set CAN Speed");
        jToggleButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton4ActionPerformed(evt);
            }
        });

        jTextField_speedCAN.setText("7");
        jTextField_speedCAN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_speedCANActionPerformed(evt);
            }
        });

        jTextField_nmsg1_rec.setText("0");
        jTextField_nmsg1_rec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_nmsg1_recActionPerformed(evt);
            }
        });

        jLabel10.setText("recv");

        jToggleButton5.setText("Start PID");
        jToggleButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton5ActionPerformed(evt);
            }
        });

        jTextField_target_PIDS.setText("1");
        jTextField_target_PIDS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_target_PIDSActionPerformed(evt);
            }
        });

        jToggleButton6.setText("Stop PID");
        jToggleButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton6ActionPerformed(evt);
            }
        });

        jTextField_target_PIDE.setText("10");
        jTextField_target_PIDE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_target_PIDEActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPane, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textbar)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(SendButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(clearButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jToggleButton4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jToggleButton3)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(jTextField_nmsg1_rec, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                                    .addComponent(jTextField_nmsg, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel9)
                                                    .addComponent(jLabel10)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jToggleButton2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTextField_target_msg_s, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel8)))
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextField_speedCAN, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jToggleButton1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(31, 31, 31)
                                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jToggleButton5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField_target_PIDS, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField_target_PIDE, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jTextField2)
                                            .addComponent(portBox, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5)))
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(portToggle)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(baudField, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel3))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel6))
                                    .addComponent(jToggleButton6))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 574, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(textbar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clearButton)
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SendButton)
                            .addComponent(jButton3)
                            .addComponent(jButton4)
                            .addComponent(jButton2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(portBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(baudField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addComponent(portToggle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jToggleButton1)
                            .addComponent(jToggleButton2)
                            .addComponent(jTextField_target_msg_s, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(jToggleButton3)
                                .addComponent(jTextField_nmsg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9)
                                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel10)
                                    .addComponent(jTextField_nmsg1_rec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextField_speedCAN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jToggleButton4))
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jToggleButton5)
                                .addComponent(jTextField_target_PIDS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextField_target_PIDE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToggleButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addComponent(fileChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

                                      

      

    
    
    public void sendmessageBYSERIE(String msg) {                                        
             textWin.append(">IP>"+msg + "\n");   //write text to terminal followed by new line
        
        if (open==true) {
        
                
            try {
                Comm.serialPort.writeBytes(msg.getBytes()); 
            } catch (SerialPortException ex) {
                Logger.getLogger(SerTermGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }                                       

      public void sendmessageBYSERIE(String msg,String IP) {                                        
             textWin.append(">IP:"+IP+">"+msg + "\n");   //write text to terminal followed by new line
        
        if (open==true) {
        
                
            try {
                Comm.serialPort.writeBytes(msg.getBytes());
            } catch (SerialPortException ex) {
                Logger.getLogger(SerTermGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    } 
    
                                            

    private String transforminCAN(String line)
    {
        
        line=line+"\n";
        
        int ct;
        int c;
        String auxi,auxic;
        int num_bytes;
        
        auxic="";
        while(line.length()>0)
        {
        auxi="";
        c=0;
        /*if (line.contains("\n")) c++;
        if (line.contains(":")) c++;
        num_bytes=(line.length()-c)/2+c; // :,\n
        
        */
        num_bytes=line.length(); 
            if (num_bytes>=8) 
            {
                ct=8;
                auxi=auxi+"08";
            }
            else
            {
                ct=num_bytes;
                auxi=auxi+"0"+num_bytes;
            }
            
        do
        {
            if (line.subSequence(0,1).charAt(0)==':')                
            {
                auxi=auxi+"3A";
                line=line.substring(1);
            }
            else
                if (line.subSequence(0,1).charAt(0)=='\n')                
                {
                    auxi=auxi+"0D";
                    line=line.substring(1);
                }
                else
                {
                    int t;
                     
                    char ca=line.charAt(0);
                                          
                    auxi=auxi+""+Integer.toHexString(ca);
                    line=line.substring(1);
                }//coge los caracteres directamente de la line y los manda por can porque ya estan en hexadecimal 
                
              ct--;  
             
            
        }while(ct>0);
       // auxi=">"+jTextField1.getText()+auxi+"<";
        auxic=auxic+auxi;
        }
        return auxic;
    }
    int Totalsize() 
    {
        
        int size=0;
        try {
            BufferedReader br=new BufferedReader(new FileReader(HexFile));
            String line;
            while ((line=br.readLine())!=null)
            {
                String sizeline=line.substring(1,3);
                size=size+1+2+4+2+Integer.parseInt(sizeline, 16)*2+2+1; // trama hex                        
                //System.out.println("Nueva linea "+line);
            
            }
                
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(SerTermGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(SerTermGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        return size;
            
    };
    
    public void dereferencemotor()
    {
        motor=null;
        gettextWin().append("motor class dereferenced\n");
    }
                                           

    private void teclapulsada(java.awt.event.KeyEvent evt) {                              
        // TODO add your handling code here:
     
        //if serial port open, write to serial port
        if (Comm.serialPort.isOpened()) {
            try {
                byte car=(byte) evt.getKeyChar();
                Comm.serialPort.writeByte(car); //write to serial port
            } catch (SerialPortException ex) {
                Logger.getLogger(SerTermGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }                             


                                       

    private void sendResettouC()
    {
         String text = ""+((char)27)+"<"+((char)27);
         if (Comm!=null)
         {
             if (Comm.serialPort!=null)
             {
                if (open==true) {   
                try {
                Comm.serialPort.writeBytes(text.getBytes());
            } catch (SerialPortException ex) {
                Logger.getLogger(SerTermGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            }
             }
           }
    }
  
                                     

   
        public void setNumberConections(int t)
    {
        jTextField4.setText(""+t);
    }
    
        public void setNumberMSG(int t)
    {
        jTextField3.setText(""+t);
    }

   
    //fill buffer with numBytes bytes from is
    public void readall(InputStream is, byte[] buffer, int numBytes) {
        int tempRead=0;
        while( tempRead < numBytes ) {
            try {
                tempRead = tempRead + is.read(buffer, tempRead, numBytes - tempRead);
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
        return;
    }

    static SerTermGUI Ventana;
    
    private void textWinteclapulsada(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textWinteclapulsada
        // TODO add your handling code here:

        //if serial port open, write to serial port
        if (Comm.serialPort.isOpened()) {
            try {
                byte car=(byte) evt.getKeyChar();
                Comm.serialPort.writeByte(car); //write to serial port
            } catch (SerialPortException ex) {
                Logger.getLogger(SerTermGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_textWinteclapulsada

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        //remove all text from the window
        textWin.replaceRange("",0,textWin.getText().length());
    }//GEN-LAST:event_clearButtonActionPerformed

    private void textbarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textbarActionPerformed
           String text = textbar.getText();    //get text from field
       
        //if serial port open, write to serial port
        if (open==true) {
             textWin.append(">>"+text + "\n");   //write text to terminal followed by new line
             textbar.selectAll();                //highlight text so it can be easily overwritten
                
            try {
                Comm.serialPort.writeBytes(text.getBytes());
            } catch (SerialPortException ex) {
                Logger.getLogger(SerTermGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else {
        if (sCAN!=null){
                //text.replace(">R", ">");
                sCAN.SendMessage(text);
        }else{
                textWin.append("Noooo!! Select Port and Open it or start Server \n");   //write text to terminal followed by new line
                // TODO add your handling code here:
        }
        } 
    }//GEN-LAST:event_textbarActionPerformed

    private void fileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileChooserActionPerformed
                                             
        // TODO add your handling code here:
        String value=evt.paramString();
        if (evt.getActionCommand().contains(("ApproveSelection")))
        {
                     HexFile=fileChooser.getSelectedFile();
                
        // crea un thread y manda linea a linea el fichero con el action performed send
        
        if (motor==null)
        {
            gettextWin().append("new Motor Class\n");
            motor=new Motor(this);
            motor.enviarfichero(HexFile);           
        }
        else
        {
             gettextWin().append("Motor Class alive\n");
        }
        /*try {
                             textWin.append("wait a moment closing files and killing threads\n");
                             
                             motor.SendingFileStopper=true;
                             do
                                 Thread.sleep(10);
                                 while (motor.SendingFileStopper==true);
                             } catch (InterruptedException ex) {
                             Logger.getLogger(SerTermGUI.class.getName()).log(Level.SEVERE, null, ex);
                         }
                         motor=null;
                         
        }*/
        }// 
        else // cancelç
        {
            if (motor!=null)
            {try {
                             gettextWin().append("Killing motor wait a moment\n");
                             
                             motor.SendingFileStopper=true;
                             {boolean espera=true;
                              do{
                                 if (motor!=null) espera=motor.SendingFileStopper;
                                 else
                                     espera=false;
                                 Thread.sleep(100);
                               }while (espera);
                             }
                                } catch (InterruptedException ex) {
                             Logger.getLogger(SerTermGUI.class.getName()).log(Level.SEVERE, null, ex);
                            }
              gettextWin().append("Sending Reset to bootloader\n");//if serial port open, write to serial port
               sendResettouC();
            }           
                         
        }
            
        
    

    }//GEN-LAST:event_fileChooserActionPerformed

    private void SendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendButtonActionPerformed
        //Send button is the same action as hitting Enter on the textbar
        textbarActionPerformed(evt);
        
        
    }//GEN-LAST:event_SendButtonActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        String text = ":00000101fe\n";

        //if serial port open, write to serial port
        if (open==true) {
            gettextWin().append(text);   //write text to terminal followed by new line

            try {
                Comm.serialPort.writeBytes(text.getBytes());
            } catch (SerialPortException ex) {
                Logger.getLogger(SerTermGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else
        {
            textWin.append("Noooo!! Select Port and Open it\n");   //write text to terminal followed by new line
            // TODO add your handling code here:
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        // TODO add your handling code here:
        //if serial port open, write to serial port
        if (open==true) {
            sendResettouC();
        }else
        {
            textWin.append("Noooo!! Select Port and Open it\n");   //write text to terminal followed by new line
            // TODO add your handling code here:
        } // TODO add your handling code here: sendReset();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String text = ":00000001ff\n";

        //if serial port open, write to serial port
        if (open==true) {
            textWin.append(text);   //write text to terminal followed by new line

            try {
                Comm.serialPort.writeBytes(text.getBytes());
            } catch (SerialPortException ex) {
                Logger.getLogger(SerTermGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else
        {
            textWin.append("Noooo!! Select Port and Open it\n");   //write text to terminal followed by new line
            // TODO add your handling code here:
        } // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void portBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_portBoxActionPerformed
        if (open==true) { //if port open, make user close port before changing port
            textWin.append("Must Close Port Before Changing Port.\n");
            //JOptionPane.showMessageDialog(this, "Must Close Port Before Changing Port.");

        }
        else {

            portName = (String)portBox.getSelectedItem();
            jTextField2.setText(portName);
            textWin.append(">>Port Selected: " +portName+ ", Baud Rate: "+baudRate+"\n");
        }
    }//GEN-LAST:event_portBoxActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void baudFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_baudFieldActionPerformed
        //hitting "enter" does the same thing as pressing the "Set Baud" button

    }//GEN-LAST:event_baudFieldActionPerformed

    private void portToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_portToggleActionPerformed
        //only open valid port. portList[0]="select port" - not a valid port

        Thread tr=new Thread () {

            public void run() {
                try {

                    if (jTextField2.getText().length()>0)
                    {

                        if ((!open))
                        {
                            Comm.serialPort = new SerialPort(portName);
                            textWin.append(">>Open Port: " +portName+ ", at Baud Rate: "+baudRate+"\n");
                            portBox.setEnabled(false);
                            if(Comm.serialPort.openPort()){
                                if(Comm.serialPort.setParams(baudRate,SerialPort.DATABITS_8,SerialPort.STOPBITS_1,SerialPort.PARITY_NONE)){
                                    portToggle.setText("Close port");
                                    Comm.serialPort.addEventListener(Comm.new Reader(), SerialPort.MASK_RXCHAR |
                                        SerialPort.MASK_RXFLAG
                                    );

                                    open=true;

                                }
                            };
                        }
                        else
                        {
                            portToggle.setText("Open port closed");
                            Comm.serialPort.closePort();
                            jTextField2.setText("");
                            open=false;
                            portBox.setEnabled(true);
                        }
                    }
                    else
                    {
                        textWin.append("you must select a port before open\n");
                    }
                }catch (Exception ex) {
                    //Do nothing

                }

                System.out.println("end of toggle function");
            }
        };

        tr.start();
    }//GEN-LAST:event_portToggleActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:

        javax.swing.JToggleButton Boton;
        Boton=(JToggleButton) evt.getSource();
        if (Boton.getText().contains("tart"))
        {
            Boton.setText("Stop Server");
            sCAN=new ServidorCAN(this);
            int t;
            t=Integer.parseInt(jTextField1.getText());
            sCAN.start_Superserver(t);
            jTextField5.setText(sCAN.getIP());

        }
        else
        {

            jTextField5.setText("");
            sCAN.KillServer();
            Boton.setText("Start Server");
        }

    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6ActionPerformed

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7ActionPerformed

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        // TODO add your handling code here:
                                                   
        // TODO add your handling code here:
        javax.swing.JToggleButton Boton;
        Boton=(JToggleButton) evt.getSource();
        Boton.setSelected(false);
        // crea un thread y manda linea a linea el fichero con el action performed send
        int t=Integer.parseInt(this.jTextField_target_msg_s.getText());
        if (motor==null)
        {
            gettextWin().append("new Motor Class\n");
            motor=new Motor(this);
            motor.stress_msg(t);           
        }
        else
        {
             gettextWin().append("impossible to start. Motor Class alive\n");
        }
        
                
       
        
    }//GEN-LAST:event_jToggleButton2ActionPerformed

    private void jToggleButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton3ActionPerformed
        // TODO add your handling code here:
          // TODO add your handling code here:
        javax.swing.JToggleButton Boton;
        Boton=(JToggleButton) evt.getSource();
        Boton.setSelected(false);
        
        if (motor!=null)
        {
            motor.stress_msg_on=false;  
            motor=null;
        }
        
    }//GEN-LAST:event_jToggleButton3ActionPerformed

    private void jTextField_target_msg_sActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_target_msg_sActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_target_msg_sActionPerformed

    private void jTextField_nmsgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_nmsgActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTextField_nmsgActionPerformed

    private void jToggleButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton4ActionPerformed
        // TODO add your handling code here:
        javax.swing.JToggleButton Boton;
        Boton=(JToggleButton) evt.getSource();
        Boton.setSelected(false);
        sendmessageBYSERIE(">I"+jTextField_speedCAN.getText()+"<");
        
    }//GEN-LAST:event_jToggleButton4ActionPerformed

    private void jTextField_speedCANActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_speedCANActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_speedCANActionPerformed

    private void jTextField_nmsg1_recActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_nmsg1_recActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_nmsg1_recActionPerformed

    private void jToggleButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton5ActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        javax.swing.JToggleButton Boton;
        Boton=(JToggleButton) evt.getSource();
        Boton.setSelected(false);
        // crea un thread y manda linea a linea el fichero con el action performed send
        int PIDI=Integer.parseInt(this.jTextField_target_PIDS.getText());
        int PIDE=Integer.parseInt(this.jTextField_target_PIDE.getText());
        if (motor==null)
        {
            gettextWin().append("new Motor Class for PID\n");
            motor=new Motor(this);
            motor.PID_msg(PIDI,PIDE);           
        }
        else
        {
             gettextWin().append("impossible to start. Motor Class alive\n");
        }
        
    }//GEN-LAST:event_jToggleButton5ActionPerformed

    private void jTextField_target_PIDSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_target_PIDSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_target_PIDSActionPerformed

    private void jToggleButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton6ActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        javax.swing.JToggleButton Boton;
        Boton = (JToggleButton) evt.getSource();
        Boton.setSelected(false);

        if (motor != null) {
            motor.PID_msg_on = false;
            motor = null;
        }
    }//GEN-LAST:event_jToggleButton6ActionPerformed

    private void jTextField_target_PIDEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_target_PIDEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_target_PIDEActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SerTermGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SerTermGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SerTermGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SerTermGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SerTermGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton SendButton;
    private javax.swing.JTextField baudField;
    private javax.swing.JButton clearButton;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    public javax.swing.JTextField jTextField_nmsg;
    public javax.swing.JTextField jTextField_nmsg1_rec;
    public javax.swing.JTextField jTextField_speedCAN;
    public javax.swing.JTextField jTextField_target_PIDE;
    private javax.swing.JTextField jTextField_target_PIDS;
    private javax.swing.JTextField jTextField_target_msg_s;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JToggleButton jToggleButton3;
    private javax.swing.JToggleButton jToggleButton4;
    private javax.swing.JToggleButton jToggleButton5;
    private javax.swing.JToggleButton jToggleButton6;
    private javax.swing.JComboBox portBox;
    private javax.swing.JToggleButton portToggle;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JTextArea textWin;
    private javax.swing.JTextField textbar;
    // End of variables declaration//GEN-END:variables

public JTextArea gettextWin(){
         //DefaultCaret caret = (DefaultCaret)(textWin.getCaret());
         //caret.setUpdatePolicy(DefaultCaret.OUT_BOTTOM);
         textWin.setCaretPosition((textWin.getDocument().getLength()));
        return textWin;};
    
   
    public JComboBox getportBox(){return portBox;};
    //constants

  public JTextField gettextField2(){return jTextField2;}
  public JTextField gettextField1(){return jTextField1;}  
}
